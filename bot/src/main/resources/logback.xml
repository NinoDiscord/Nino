<!--
~ ðŸ”¨ Nino: Cute, advanced discord moderation bot made in Kord.
~ Copyright (c) 2019-2022 Nino Team
~
~ Permission is hereby granted, free of charge, to any person obtaining a copy
~ of this software and associated documentation files (the "Software"), to deal
~ in the Software without restriction, including without limitation the rights
~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
~ copies of the Software, and to permit persons to whom the Software is
~ furnished to do so, subject to the following conditions:
~
~ The above copyright notice and this permission notice shall be included in all
~ copies or substantial portions of the Software.
~
~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~ SOFTWARE.
-->

<configuration debug="false" packagingData="true">
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
    <property resource="config/logging.properties" />

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{yyyy-MM-dd | HH:mm:ss, +10}] %boldCyan([%thread]) %highlight([%logger{36}]) %boldMagenta(%-5level) :: %msg%n</pattern>
        </encoder>
    </appender>

    <if condition='property("nino.encoders").contains("sentry")'>
        <then>
            <appender name="Sentry" class="io.sentry.logback.SentryAppender">
                <options>
                    <dsn>${nino.dsn}</dsn>
                </options>
            </appender>
        </then>
    </if>

    <if condition='property("nino.encoders").contains("logstash")'>
        <then>
            <appender name="Logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${nino.logstash.endpoint}</destination>
                <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <timestamp />
                        <message />
                        <loggerName />
                        <threadName />
                        <logLevel />
                        <callerData />
                        <stackTrace />
                        <contextName />
                        <mdc />
                        <tags />
                        <logstashMarkers />
                        <throwableClassName />
                        <throwableMessage />
                        <throwableRootCauseClassName />
                        <throwableRootCauseMessage />
                        <includeMdcKeyName>user_agent</includeMdcKeyName>
                        <includeMdcKeyName>user_id</includeMdcKeyName>
                    </providers>

                    <customFields>{"project":"Nino","application":"bot"}</customFields>
                </encoder>

                <keepAliveDuration>5 minutes</keepAliveDuration>
                <writeVersionAsInteger>true</writeVersionAsInteger>
            </appender>
        </then>
    </if>

    <if condition='property("nino.encoders").contains("sentry")'>
        <then>
            <root level="ERROR">
                <appender-ref ref="Sentry" />
            </root>
        </then>
    </if>

    <if condition='isDefined("nino.debug")'>
        <then>
            <logger name="sh.nino" level="debug" additivity="false">
                <appender-ref ref="Console" />

                <if condition='property("nino.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </logger>

            <root level="DEBUG">
                <appender-ref ref="Console" />

                <if condition='property("nino.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </root>
        </then>
        <else>
            <logger name="sh.nino" level="info" additivity="false">
                <appender-ref ref="Console" />

                <if condition='property("nino.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </logger>

            <root level="INFO">
                <appender-ref ref="Console" />

                <if condition='property("nino.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </root>
        </else>
    </if>
</configuration>
